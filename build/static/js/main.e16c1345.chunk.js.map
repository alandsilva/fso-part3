{"version":3,"sources":["Filter.js","PersonForm.js","Persons.js","Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","search","handleSearchChange","value","onChange","PersonForm","newName","handleNameChange","newNumber","handleNumberChange","addPerson","onClick","type","Persons","namesToShow","removePerson","map","person","i","name","number","Notification","message","className","baseUrl","axios","get","newPerson","post","id","put","delete","App","useState","persons","setPersons","setNewName","setNewNumber","setSearch","setMessage","messageType","setMessageType","useEffect","personService","then","response","data","updatePerson","window","confirm","find","changedPerson","updateMessage","p","catch","setTimeout","filter","toLowerCase","includes","event","target","preventDefault","concat","personToRemove","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e16c1345.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = ({ search, handleSearchChange }) => {\n  return (\n    <div>\n      filter shown with: <input value={search} onChange={handleSearchChange} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\n\nconst PersonForm = ({\n  newName,\n  handleNameChange,\n  newNumber,\n  handleNumberChange,\n  addPerson,\n}) => {\n  return (\n    <form>\n      <div>\n        name: <input value={newName} onChange={handleNameChange} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={handleNumberChange} />\n      </div>\n      <div>\n        <button onClick={addPerson} type='submit'>\n          add\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from 'react';\n\nconst Persons = ({ namesToShow, removePerson }) => {\n  return namesToShow.map((person, i) => (\n    <p key={i}>\n      {person.name} {person.number}{' '}\n      <button onClick={() => removePerson(person)}>delete</button>\n    </p>\n  ));\n};\n\nexport default Persons;\n","import React from 'react';\nconst Notification = ({ message, type }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className={type}>{message}</div>;\n};\n\nexport default Notification;\n","import axios from 'axios';\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  return axios.get(baseUrl);\n};\n\nconst create = (newPerson) => {\n  return axios.post(baseUrl, newPerson);\n};\n\nconst update = (id, newPerson) => {\n  return axios.put(`${baseUrl}/${id}`, newPerson);\n};\n\nconst remove = (id) => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\nexport default { getAll, create, update, remove };\n","import React, { useState, useEffect } from 'react';\nimport './index.css';\nimport Filter from './Filter';\nimport PersonForm from './PersonForm';\nimport Persons from './Persons';\nimport Notification from './Notification';\nimport personService from './services/persons';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [search, setSearch] = useState('');\n  const [message, setMessage] = useState(null);\n  const [messageType, setMessageType] = useState('error');\n\n  useEffect(() => {\n    personService.getAll().then((response) => {\n      setPersons(response.data);\n    });\n  }, []);\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n  const handleSearchChange = (event) => {\n    setSearch(event.target.value);\n  };\n  const addPerson = (event) => {\n    event.preventDefault();\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n    };\n    // Check if name already exists\n    if (persons.find((person) => person.name === newPerson.name)) {\n      updatePerson(newPerson);\n    } else {\n      personService.create(newPerson).then((response) => {\n        updateMessage(`Added ${newPerson.name}`, 'success');\n        setPersons(persons.concat(response.data));\n      });\n    }\n    setNewName('');\n    setNewNumber('');\n  };\n  const updatePerson = (newPerson) => {\n    if (\n      window.confirm(\n        `${newPerson.name} is already added to phonebook. Replace the old number with a new one?`\n      )\n    ) {\n      const person = persons.find((person) => person.name === newPerson.name);\n      const changedPerson = { ...person, number: newPerson.number };\n      personService\n        .update(person.id, changedPerson)\n        .then((response) => {\n          updateMessage(`Updated ${newPerson.name}`, 'success');\n          setPersons(\n            persons.map((p) => (p.id !== person.id ? p : response.data))\n          );\n        })\n        .catch(() => {\n          updateMessage(\n            `Information of ${newPerson.name} has already been removed from server`,\n            'error'\n          );\n        });\n    }\n  };\n\n  const removePerson = (personToRemove) => {\n    if (window.confirm(`Delete ${personToRemove.name} ?`)) {\n      personService\n        .remove(personToRemove.id)\n        .then(() => {\n          updateMessage(`Deleted ${personToRemove.name}`, 'success');\n          setPersons(\n            persons.filter((person) => person.id !== personToRemove.id)\n          );\n        })\n        .catch(() => {\n          updateMessage(\n            `${personToRemove.name} was already removed from server`,\n            'error'\n          );\n        });\n    }\n  };\n\n  const updateMessage = (message, type) => {\n    setMessageType(type);\n    setMessage(message);\n    setTimeout(() => {\n      setMessage(null);\n    }, 5000);\n  };\n\n  const namesToShow = persons.filter((person) =>\n    person.name.toLowerCase().includes(search.toLowerCase())\n  );\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} type={messageType} />\n      <Filter search={search} handleSearchChange={handleSearchChange} />\n      <h3>Add a new</h3>\n      <PersonForm\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n        addPerson={addPerson}\n      />\n      <h3>Numbers</h3>\n      <Persons namesToShow={namesToShow} removePerson={removePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}